// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://ubcikcfqofrzog:57229cdf94a438115901c26bfc7550306cb68e6ace4144e72110184e92f7b593@ec2-34-247-72-29.eu-west-1.compute.amazonaws.com:5432/dfn83soe6a3jjj"
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Post {
  id       String    @id @default(uuid())
  title    String
  body     String
  comments Comment[]
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  password String
  activationToken String? @unique
  comments Comment[]
  likes    Like[]
}

model Comment {
  id        String    @id @default(uuid())
  message   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  parent    Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  children  Comment[] @relation("ParentChild")
  parentId  String?
  likes     Like[]
}

model Like {
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId    String
  commentId String
  @@id([userId, commentId])
}
